{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Dustin\\\\OneDrive\\\\Documents\\\\Coding Class\\\\Module 13 Files\\\\build-a-formik-form_starter\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\n// TODO: import useFormik from formik library\nimport { useFormik } from 'formik';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  // TODO: add a const called formik assigned to useFormik()\n  const formik = useFormik({\n    initialValues: {\n      email: '',\n      password: ''\n    },\n    onSubmit: values => {\n      console.log('form:', values);\n    },\n    validate: values => {\n      let errors = {};\n      if (!values.email) errors.email = 'Field Required';\n      if (!values.password) errors.password = 'Field Required';\n      //if the username is not an email format, display the message \"Username should be an email\" under the text input.\n      if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i.test(values.email)) errors.email = 'Username should be an email';\n      //if the username and password pass the above validations, then display the message \"Login Successful\" in an alert box.\n      if (!errors.email && !errors.password) alert('Login Successful');\n      return errors;\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: formik.handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Email:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"emailField\",\n        onChange: formik.handleChange,\n        value: formik.values.email\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this), formik.errors.email ? /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          color: 'red'\n        },\n        children: formik.errors.email\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 32\n      }, this) : null, /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Password:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"pswField\",\n        onChange: formik.handleChange,\n        value: formik.values.password\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 107\n      }, this), formik.errors.password ? /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          color: 'red'\n        },\n        children: formik.errors.password\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 35\n      }, this) : null, /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"B/4rI4IXClQ7sG7psKj+pOuRe5Q=\", false, function () {\n  return [useFormik];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useFormik","jsxDEV","_jsxDEV","App","_s","formik","initialValues","email","password","onSubmit","values","console","log","validate","errors","test","alert","children","handleSubmit","fileName","_jsxFileName","lineNumber","columnNumber","type","name","onChange","handleChange","value","style","color","_c","$RefreshReg$"],"sources":["C:/Users/Dustin/OneDrive/Documents/Coding Class/Module 13 Files/build-a-formik-form_starter/src/App.js"],"sourcesContent":["import React from \"react\";\n// TODO: import useFormik from formik library\nimport { useFormik} from 'formik'\n\nfunction App() {\n  // TODO: add a const called formik assigned to useFormik()\n  const formik = useFormik({\n    initialValues: {\n      email: '',\n      password: ''\n    },\n    onSubmit: values =>{\n      console.log('form:',values);\n    },\n    validate: values =>{\n      let errors = {};\n      if(!values.email) errors.email = 'Field Required';\n      if(!values.password) errors.password = 'Field Required';\n      //if the username is not an email format, display the message \"Username should be an email\" under the text input.\n      if(!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i.test(values.email)) errors.email = 'Username should be an email';\n      //if the username and password pass the above validations, then display the message \"Login Successful\" in an alert box.\n      if(!errors.email && !errors.password) alert('Login Successful');\n      return errors;\n    }\n  });\n      \n\n  return (\n    <div>\n      <form onSubmit={formik.handleSubmit}>\n        <div>Email:</div>\n        <input type=\"text\" name=\"emailField\" onChange={formik.handleChange} value={formik.values.email}/>\n        {formik.errors.email ? <div style={{color:'red'}}>{formik.errors.email}</div> : null}\n        <div>Password:</div>\n        <input type=\"text\" name=\"pswField\" onChange={formik.handleChange} value={formik.values.password}/><br/>\n        {formik.errors.password ? <div style={{color:'red'}}>{formik.errors.password}</div> : null}\n        <button type=\"submit\">Submit</button>\n      </form>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB;AACA,SAASC,SAAS,QAAO,QAAQ;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEjC,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb;EACA,MAAMC,MAAM,GAAGL,SAAS,CAAC;IACvBM,aAAa,EAAE;MACbC,KAAK,EAAE,EAAE;MACTC,QAAQ,EAAE;IACZ,CAAC;IACDC,QAAQ,EAAEC,MAAM,IAAG;MACjBC,OAAO,CAACC,GAAG,CAAC,OAAO,EAACF,MAAM,CAAC;IAC7B,CAAC;IACDG,QAAQ,EAAEH,MAAM,IAAG;MACjB,IAAII,MAAM,GAAG,CAAC,CAAC;MACf,IAAG,CAACJ,MAAM,CAACH,KAAK,EAAEO,MAAM,CAACP,KAAK,GAAG,gBAAgB;MACjD,IAAG,CAACG,MAAM,CAACF,QAAQ,EAAEM,MAAM,CAACN,QAAQ,GAAG,gBAAgB;MACvD;MACA,IAAG,CAAC,0CAA0C,CAACO,IAAI,CAACL,MAAM,CAACH,KAAK,CAAC,EAAEO,MAAM,CAACP,KAAK,GAAG,6BAA6B;MAC/G;MACA,IAAG,CAACO,MAAM,CAACP,KAAK,IAAI,CAACO,MAAM,CAACN,QAAQ,EAAEQ,KAAK,CAAC,kBAAkB,CAAC;MAC/D,OAAOF,MAAM;IACf;EACF,CAAC,CAAC;EAGF,oBACEZ,OAAA;IAAAe,QAAA,eACEf,OAAA;MAAMO,QAAQ,EAAEJ,MAAM,CAACa,YAAa;MAAAD,QAAA,gBAClCf,OAAA;QAAAe,QAAA,EAAK;MAAM;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eACjBpB,OAAA;QAAOqB,IAAI,EAAC,MAAM;QAACC,IAAI,EAAC,YAAY;QAACC,QAAQ,EAAEpB,MAAM,CAACqB,YAAa;QAACC,KAAK,EAAEtB,MAAM,CAACK,MAAM,CAACH;MAAM;QAAAY,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC,CAAC,EAChGjB,MAAM,CAACS,MAAM,CAACP,KAAK,gBAAGL,OAAA;QAAK0B,KAAK,EAAE;UAACC,KAAK,EAAC;QAAK,CAAE;QAAAZ,QAAA,EAAEZ,MAAM,CAACS,MAAM,CAACP;MAAK;QAAAY,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC,GAAG,IAAI,eACpFpB,OAAA;QAAAe,QAAA,EAAK;MAAS;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eACpBpB,OAAA;QAAOqB,IAAI,EAAC,MAAM;QAACC,IAAI,EAAC,UAAU;QAACC,QAAQ,EAAEpB,MAAM,CAACqB,YAAa;QAACC,KAAK,EAAEtB,MAAM,CAACK,MAAM,CAACF;MAAS;QAAAW,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC,CAAC,eAAApB,OAAA;QAAAiB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,EACtGjB,MAAM,CAACS,MAAM,CAACN,QAAQ,gBAAGN,OAAA;QAAK0B,KAAK,EAAE;UAACC,KAAK,EAAC;QAAK,CAAE;QAAAZ,QAAA,EAAEZ,MAAM,CAACS,MAAM,CAACN;MAAQ;QAAAW,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC,GAAG,IAAI,eAC1FpB,OAAA;QAAQqB,IAAI,EAAC,QAAQ;QAAAN,QAAA,EAAC;MAAM;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACjC;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAEV;AAAClB,EAAA,CApCQD,GAAG;EAAA,QAEKH,SAAS;AAAA;AAAA8B,EAAA,GAFjB3B,GAAG;AAsCZ,eAAeA,GAAG;AAAC,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module"}